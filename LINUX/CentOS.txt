Ctntos 9


Структура команд

    Команда + Опцыи + Аргумент


Базовые команды

    su  --  (sudo - s)  -  переключаемся на выполнение из под рута

    pwd   --   показывает текущую дерикторию

    ls  --  выводит файлы и каталоги в текущей дериктории
        ls -l  -- выводит файлы и каталоги в текущей дериктории списком
        ls -la -- выводит все файлы в том числе и скрытые файлы
        ls -la /home -- выводит все файлы в том числе и скрытые файлы, но не в текущем каталоге,  а в каталоге "home"
        ls -lad /home -- выводит информацию и права доступа каталога "home"
        ls -laR /home -- с рекурсивным флагом, выводит все файлы и каталоги, и файлы и подкаталоги вложенных каталогов
        

    man ls (любая другая команда)  --  man это справочная информация по команде, есть ко всем командам, очень подробная информация

    cp  --  команда копирования файла, принимает два аргумента: откуда и куда копируем, можно использовать как полный путь так и относительный
        следует помнить что если такой файл уже есть и он будет перезаписан
        что бы не просто скопировать, а и переименовать фалй в итоговом каталоге - во втором аргументе необходимо прописать 
        новое название файла
        если копировать множество файлов, то все аргументы кроме последнего это какие файлы мы копируем, а последний - куда копируем

        cp -r -- флаг рекурсива - таким образом можно скопировать целую папку
    
    rm  --  команда для удаления файла
        rm -f  --  флаг форсе - удалит  файл и даже не попросит подтверждения
        rm -rf -- флаг рекурсива + флаг форсе - таким образом можно удалить целую папку
    
    touch  --  команда для создания файла

    mv  --  команда для переименования или перемещения файлов и каталогов, если не прописаны пути то переименует,
        если прописаны - переместить

    mkdir  --  команда для создания каталога
        mkdir -p test1/test2/test3 --  команда для создания каталога с подкаталогами

    uptime  --  показывает текущие параметры сервера
        время, сколько сервер работает с момента запуска, количество пользователей, и нагрузка за последние 5/10/15 минут
        эти числа не должны превышать число киличества ядер проца, иначе работает с перегрузом

    which  --  позволяет узнать где находиться исполняемый файл

    alias  --  типа ярлыка в винде, но не совсем
        с помощью этой команды создаеться файл с параметрами что нам надо выполнить, это может быть как вывод текста,
        так и запуск программы с параметрами или еще что-то
        alias hi="echo 'hello Admin'"
        ЭТИ ФАЙЛЫ ВРЕМЕННЫЕ  - ПОСЛЕ РЕБУТА ОНИ ИСЧЕЗНУТ

    who  --  покажет список пользователей залогиненых на сервер

    whoami  -- покажет под каким я сейчас пользователем

    logname  --  покажет под каким пользователем я залогинился в систему

    hostname (hostnamectl)  --  показывает имя машины, показывает более подробную информацию о системе

    timedatectl  --  показывает информацию о времени ти дате на сервере, подробно


ТЕКСТОВЫЙ РЕДАКТОР

     vi  --  открывает файл для редактирования, если его нету, создаст и откроет

     тот же редактор но новее и красивее
     vim  --  открывает файл для редактирования, если его нету, создаст и откроет

    как по мне сложная и неудобная хрень, но надо учиться )))))

        i  --  для входа в режим редактирования
        кнопка esc  --  для выхода из режима
        :w  -- для сохранения
        :wq  --  для сохранения и выхода из редактора
        :q!  --  выйти без сохранения изменений
        кнопка U  -- выйти не записав последние изменения


Выполнение скриптов

    необходимо помнить что когда мы прописываем выполнение любого скрипта или программы
    система ищет их в нашем каталоге bin, так как это наш PATH  - место где храняться бинарники ,как и в винде
    но если нам нужно выполнить скрипт который не предустановлен или не прописан
    то это будет выглядеть таким образом
    ./test.sh  --  где  ./ это относительный путь - текущий каталог, test.sh - имя самого скрипта


