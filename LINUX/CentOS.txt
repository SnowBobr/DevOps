Ctntos 9


Структура команд

    Команда + Опцыи + Аргумент


Базовые команды

    su  --  (sudo - s)  -  переключаемся на выполнение из под рута

    pwd   --   показывает текущую дерикторию

    ls  --  выводит файлы и каталоги в текущей дериктории
        ls -l  -- выводит файлы и каталоги в текущей дериктории списком
        ls -la -- выводит все файлы в том числе и скрытые файлы
        ls -la /home -- выводит все файлы в том числе и скрытые файлы, но не в текущем каталоге,  а в каталоге "home"
        ls -lad /home -- выводит информацию и права доступа каталога "home"
        ls -laR /home -- с рекурсивным флагом, выводит все файлы и каталоги, и файлы и подкаталоги вложенных каталогов
        

    man ls (любая другая команда)  --  man это справочная информация по команде, есть ко всем командам, очень подробная информация

    cp  --  команда копирования файла, принимает два аргумента: откуда и куда копируем, можно использовать как полный путь так и относительный
        следует помнить что если такой файл уже есть и он будет перезаписан
        что бы не просто скопировать, а и переименовать фалй в итоговом каталоге - во втором аргументе необходимо прописать 
        новое название файла
        если копировать множество файлов, то все аргументы кроме последнего это какие файлы мы копируем, а последний - куда копируем

        cp -r -- флаг рекурсива - таким образом можно скопировать целую папку
    
    rm  --  команда для удаления файла
        rm -f  --  флаг форсе - удалит  файл и даже не попросит подтверждения
        rm -rf -- флаг рекурсива + флаг форсе - таким образом можно удалить целую папку
    
    touch  --  команда для создания файла

    mv  --  команда для переименования или перемещения файлов и каталогов, если не прописаны пути то переименует,
        если прописаны - переместить

    mkdir  --  команда для создания каталога
        mkdir -p test1/test2/test3 --  команда для создания каталога с подкаталогами

    uptime  --  показывает текущие параметры сервера
        время, сколько сервер работает с момента запуска, количество пользователей, и нагрузка за последние 5/10/15 минут
        эти числа не должны превышать число киличества ядер проца, иначе работает с перегрузом

    which  --  позволяет узнать где находиться исполняемый файл

    alias  --  типа ярлыка в винде, но не совсем
        с помощью этой команды создаеться файл с параметрами что нам надо выполнить, это может быть как вывод текста,
        так и запуск программы с параметрами или еще что-то
        alias hi="echo 'hello Admin'"
        ЭТИ ФАЙЛЫ ВРЕМЕННЫЕ  - ПОСЛЕ РЕБУТА ОНИ ИСЧЕЗНУТ

    who  --  покажет список пользователей залогиненых на сервер

    whoami  -- покажет под каким я сейчас пользователем

    logname  --  покажет под каким пользователем я залогинился в систему

    hostname (hostnamectl)  --  показывает имя машины, показывает более подробную информацию о системе

    timedatectl  --  показывает информацию о времени ти дате на сервере, подробно


ТЕКСТОВЫЙ РЕДАКТОР

     vi  --  открывает файл для редактирования, если его нету, создаст и откроет

     тот же редактор но новее и красивее
     vim  --  открывает файл для редактирования, если его нету, создаст и откроет

     cat  --  выводит на экран содержимое текстового файла без редактирования

    как по мне сложная и неудобная хрень, но надо учиться )))))

        i  --  для входа в режим редактирования
        кнопка esc  --  для выхода из режима
        :w  -- для сохранения
        :wq  --  для сохранения и выхода из редактора
        :q!  --  выйти без сохранения изменений
        кнопка U  -- выйти не записав последние изменения


Выполнение скриптов

    необходимо помнить что когда мы прописываем выполнение любого скрипта или программы
    система ищет их в нашем каталоге bin, так как это наш PATH  - место где храняться бинарники ,как и в винде
    но если нам нужно выполнить скрипт который не предустановлен или не прописан
    то это будет выглядеть таким образом
    ./test.sh  --  где  ./ это относительный путь - текущий каталог, test.sh - имя самого скрипта


NETWORK

    dhclient  --  получаем сетевой адрес от виртуалбокса, на моей версии ОСи это излишнее, я и так его получил,
        но на других конфигурациях может пригодиться

    ip addr  --  показывает все сетевые карты и их настройки

    получив сетевые адреса, если это виртуальная машина, интересует адрес на подобии : enp0s3
        но точно не - lo, virtual

    Что бы настроить SSH доступ нам необходимо:

        в первую очередь отключить файрвол
        systemctl stop firewalld
        systemctl disable firewalld

        далее запускаем ссш и добавляем его в автозагрузку

        systemctl start sshd
        systemctl enable sshd

        далее идем в файл конфигурации сетевого соединения и открываем его в редакторе

        vim /etc/sysconfig/network-scripts/ifcfg-enp0s3  последний блок - название сетевого контроллера
            внутри есть настройка ONBOOT=yes    должно быть yes, тогда будет работать с автозагрузки

        на моей системе соединение было в /etc/NetworkManager/ ну и далее , вобщем омжно найти и єто не сложно
            правда настройки не такие как в класическом сетевом интерфейсе и нету єтого значения онбут  


        заходим в командную строку винды и запускаем команду ipconfig что бы глянуть свои сетевые интерфейсы
            посмотрев записываем себе свой сетевой адрес, для обращения через который необходимо настроить проброс портов

        далее заходим в настройки виртуальной машины, настройки сети, дополнительно, проброс портов
            создаем новое правило и там имя/адрес локальной машины/порт (2222)/адрес виртуальной машины/порт(22)
            так и выходит правило портмэпинга
            
        далее ставим патти, сохраняем настройки и у нас есть доступ к виртуальному серверу, можно работать без всякой мутоты


        прописываем смело команду, что бы отключить графический интерфейс
        systemctl set-default multi-user.target 
        и далее пользоваться патти для работы с серваком
        главное не забыть ребутнуть сервак )))


USERS and GROUPS

    id {имя пользователя} покажет нам информацыю о пользователей
            uid=1000(test) gid=1000(test) groups=1000(test),10(wheel)
                uid --  уникальный id
                gid --  стандартная группа пользователя
                groups  --  группы к которым принадлежит пользователь

    vim /etc/passwd  --  открыть файл с настройками всех пользователей системы
        желательно никогда не трогать его руками, очень легко все испортить к чертям

    vim /etc/passwd  -- открыть файл с зашифрованными паролями всех пользователей системы
        test:$6$kT/esmPBKYRQo.F4$KOVqqRPWY2/wCGqONOH6meqRF/rnq8eKFV5Pk1v/w/Y9bFDxDNNUqPfDAvDdr26ntsLC0BvPcGTixTXpPF3FB/::0:99999:7:::
            аналогично как и в пользователях все данные разбиты на блоки через двоеточие
            первое - ник
            второе - пароль
            третее - когда последний раз был сменен пароль (отсчет от июля 1970 года в днях)
            четвертое - через сколько дней можно в следующий раз сменить пароль
            пятое - через сколько дней пароль станет не действительным
            шестое - за сколько дней до истечения срока пароля уведомить пользователя
            седьмое - можно поставить срок годности аккаунту (отсчет от июля 1970 года в днях) 
            восьмое - зарезервировано, пока не имеет назначения

    useradd {имя пользователя} -- создаем пользователя
    passwd {имя пользователя} -- создаем / изменяем  пароль пользователю
    userdel {имя пользователя} -- удалить пользователя
    userdel -r {имя пользователя} -- удалить пользователя и домашнюю дирректорию
    groupadd {имя группы} -- создаем группу пользователей

    vim /etc/default/useradd -- открыть файл с настройками создаваемых пользователей:
        группа, домашний каталог, SKEL - откуда копируються файлы для юзера, SHELL - что запускать при входе юзера

    в каталоге пользователя всегда есть два скрытых и очень важных файла
        .bashrc --  окружение пользователя, при каждой сессии загружает все оттуда
        .bash_profile  --  отвечает за то что будет происходить при первом логине на сервер

    есть еще глобальные настройки для всех пользователей они находяться:
        /etc/bash_completion.d/bushrc
        /etc/profile.d/protocols

    vim /etc/login.defs -- открыть файл с настройками создаваемых пользователей:
        тут можно много чего поменять

    chage -l {имя пользователя} -- можно посмотреть информацию в нормальном виде о состоянии пароля пользователя
        тут же можно их и поменять

        chage -E 2030-01-13 -m 3 -M 600 -W 3 kurwabobr

        таким образом прописано:
            когда истекает срок аккаунта
            сколько дней его нельзя поменять
            через сколько дней его обязательно надо поменять
            за сколько дней напомнить что надо сменить
    
    /etc/sudoers  --  настройки рутового доступа пользователям, там можно как дать полные права
        так и на выполнение отдельных команд и приложений


GROUPS and ACCESS


